% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/cast_dual.R
\name{cast_dual}
\alias{cast_dual}
\alias{cast_dual_}
\title{Cast a item-feature dataset into a wide matrix while keeping the table}
\usage{
cast_dual(tbl, item, feature, value, sparse = TRUE)

cast_dual_(tbl, item, feature, value, sparse = TRUE)
}
\arguments{
\item{tbl}{A table}

\item{item}{A column to use as rows in the resulting matrix. One
item}

\item{feature}{A column to use as columns in the resulting matrix}

\item{value}{A column to use as the value in the resulting matrix. If
missing, will use 1 (a binary matrix).}

\item{sparse}{Whether to cast into a sparse matrix}
}
\value{
A list of class "cast_tbl", with two components:
  \item{tbl}{A one-item-per-row table, containing the first instance of
  each item from the original table}
  \item{matrix}{An item-by-feature matrix whose rows line up with the
  rows of the table}
}
\description{
Often one wants to use three columns (item, feature, value) of a tidy
table to cast into a wide matrix, but still keep additional columns of
the table in line with the matrix. This is particularly relevant for
classification and clustering applications, where additional columns
may contain the true class of each item or additional information
useful for examining a model afterwards.
}
\examples{

library(gapminder)
library(dplyr)

cast_tbl <- gapminder \%>\%
  select(country, continent, year, lifeExp) \%>\%
  cast_dual(country, year, lifeExp, sparse = FALSE)

# one row per item in the table
cast_tbl$tbl

# one row per item in the matrix as well
head(cast_tbl$matrix)

}

